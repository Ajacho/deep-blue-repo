// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Uxcheckmate_Main.Models;

#nullable disable

namespace Uxcheckmate_Main.Migrations
{
    [DbContext(typeof(UxCheckmateDbContext))]
    partial class UxCheckmateDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Uxcheckmate_Main.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReportID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Recommendations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ReportId")
                        .HasName("PK__Reports__D5BD48E55537F96D");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Uxcheckmate_Main.Models.ReportCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OpenAiprompt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OpenAIPrompt");

                    b.HasKey("CategoryId")
                        .HasName("PK__ReportCa__19093A2BAE98F34D");

                    b.HasIndex(new[] { "Name" }, "UQ__ReportCa__737584F6260F4374")
                        .IsUnique();

                    b.ToTable("ReportCategories");
                });

            modelBuilder.Entity("Uxcheckmate_Main.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE3A9F76FFA0");

                    b.HasIndex(new[] { "Name" }, "UQ__Roles__737584F6A7C2AD59")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Uxcheckmate_Main.Models.UserAccount", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.HasKey("UserId")
                        .HasName("PK__UserAcco__1788CCACA92BB876");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__UserAcco__A9D10534985556DE")
                        .IsUnique();

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("Uxcheckmate_Main.Models.Report", b =>
                {
                    b.HasOne("Uxcheckmate_Main.Models.ReportCategory", "Category")
                        .WithMany("Reports")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Reports_CategoryID");

                    b.HasOne("Uxcheckmate_Main.Models.UserAccount", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Reports_UserID");

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Uxcheckmate_Main.Models.UserAccount", b =>
                {
                    b.HasOne("Uxcheckmate_Main.Models.Role", "Role")
                        .WithMany("UserAccounts")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_UserAccounts_RoleID");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Uxcheckmate_Main.Models.ReportCategory", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Uxcheckmate_Main.Models.Role", b =>
                {
                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("Uxcheckmate_Main.Models.UserAccount", b =>
                {
                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
